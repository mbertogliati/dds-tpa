@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "ar.edu.utn.frba.dds.domain.security.Password",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_100278 { 
   	label=edu
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1878955145 { 
   	label=utn
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Comunidad1819476936[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Comunidad</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   miembros: List&lt;Miembro&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agregarMiembro(nuevoMiembro: Miembro)</TD></TR>
<TR><TD ALIGN="LEFT" >+ eliminarMiembro(miembro: Miembro)</TD></TR>
<TR><TD ALIGN="LEFT" >+ esMiembro(usuario: Usuario): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Miembro1819476936[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Miembro</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   comunidad: Comunidad [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rol: RolComunidad [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   usuario: Usuario [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Password1530058368[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Password</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   costo: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   salt: byte[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- cambiarPassword(nuevaPassword: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cambiarPassword(viejaPassword: String, nuevaPassword: String, usuario: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ esValida(pass: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Usuario1819476936[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Usuario</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   apellido: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: Password [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rol: RolPlataforma [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sesionIniciada: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   usuario: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cambiarPassword(viejaPassword: String, nuevaPassword: String, usuario: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cerrarSesion()</TD></TR>
<TR><TD ALIGN="LEFT" >+ desuscribirAComunidad(comunidad: Comunidad)</TD></TR>
<TR><TD ALIGN="LEFT" >+ iniciarSesion(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ registrar()</TD></TR>
<TR><TD ALIGN="LEFT" >+ suscribirAComunidad(comunidad: Comunidad)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Validador1530058368[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Validador</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- cantidadCorrectaDeCaracteres(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- contieneMayuscula(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- contieneMinuscula(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- contieneNumero(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- contieneSimbolo(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ esValida(password: String, usuario: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ genSalt(): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHash(password: String, salt: byte[], costo: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- noEsIgualAUsuario(password: String, usuario: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- noEstaEnPeoresPasswords(password: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- obtenerPeoresPasswords(): ArrayList&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Comunidad1819476936 -> Miembro1819476936[label="miembros
[0..*]"];
Miembro1819476936 -> Comunidad1819476936[label="comunidad
[0..1]"];
Miembro1819476936 -> Usuario1819476936[label="usuario
[0..1]"];
Usuario1819476936 -> Password1530058368[label="password
[0..1]"];
    
}
@enduml