@startuml
skinparam linetype ortho

class Persona{
    -metodoNotificacion: String

    +getMetodoNotificacion(): String
    +setMetodoNotificacion(metodo: String)
}

interface Notificable{
    +getInfo(): String
}

class Ranking{
    +getInfo(): String
}
class Incidente{
    +getInfo(): String
}
Ranking .down.|> Notificable
Incidente .up.|> Notificable

interface INotificador{
    {static}+notificar(notificable: Notificable, persona: Persona)
}

Notificador ..|> INotificador

INotificador ..> Persona
INotificador .left.> Notificable

class Notificador{
    {static}+notificar(notificable: Notificable, persona: Persona)
    {static}-notificarWPP(notificable: Notificable, persona: Persona)
    {static}-notificarMail(notificable: Notificable, persona: Persona)
}

Notificador .up.> AdapterMail
Notificador .right.> AdapterWPP

interface AdapterMail{
    +enviarMail(mensaje: String, correo: String)
}

class EnviadorMailConcreto{
    .....atributos
    +enviarMail(mensaje: String, correo: String)
    .....metodos
}
EnviadorMailConcreto ..|> AdapterMail

interface AdapterWPP{
    +enviarWPP(mensaje: String, telefono: int)
}
class EnviadorWPPConcreto{
    .....atributos
    +enviarWPP(mensaje: String, telefono: int)
    .....metodos
}
EnviadorWPPConcreto ..|> AdapterWPP

@enduml